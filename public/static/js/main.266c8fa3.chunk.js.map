{"version":3,"sources":["pages/Notes/Notes.module.scss","components/FormNote/FormNote.module.scss","components/Header/Header.module.scss","App.module.scss","components/ListNotes/ListNotes.module.scss","components/Note/Note.module.scss","api/api.js","redux/notesReducer.js","redux/store.js","components/Header/Header.js","assets/images/image.svg","components/FormNote/FormNote.js","components/Note/Note.js","components/ListNotes/ListNotes.js","pages/Notes/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","instance","axios","baseURL","notesAPI","get","text","importance","post","id","completed","image","data","FormData","append","name","SET_ALL_NOTES","SET_NEW_NOTE","SET_UPDATE_NOTE","DELETE_NOTE","CHANGE_COMPLETED","SET_IMAGE","initialState","notes","setUpdateNote","type","deleteNote","setChangeCompleted","setImage","notesReducer","state","action","note","map","filter","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","Header","className","styles","wrapper","content","title","FormNote","open","onClose","update","useState","formik","useFormik","initialValues","onSubmit","values","console","log","setImageForNote","e","target","files","length","document","body","classList","add","remove","head","close","onClick","form","handleSubmit","radio","radioTitle","radioList","radioButton","value","checked","onChange","handleChange","textNoteWrapper","textNoteTitle","textNote","submitWrapper","submit","imageAddWrapper","addImage","alt","src","imageSVG","hidden","Note","updateNote","changeCompleted","updateImage","openForm","setOpenForm","dateCreated","dateUpdated","dateCreatedSplit","split","date","hours","minutes","time","footer","actions","delete","ListNotes","Notes","props","openCreateNoteWindow","openWindow","bind","closeWindow","this","getAllNotes","setState","notesContainer","buttonAddNote","list","addNewNote","Component","connect","dispatch","a","response","dataResponse","result","Array","isArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.266c8fa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notesContainer\":\"Notes_notesContainer__3yBM7\",\"head\":\"Notes_head__2DIng\",\"buttonAddNote\":\"Notes_buttonAddNote__zmtFJ\",\"list\":\"Notes_list__3DKH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FormNote_wrapper__WXzl2\",\"open\":\"FormNote_open__3lY60\",\"content\":\"FormNote_content__3q6ls\",\"head\":\"FormNote_head__363xa\",\"close\":\"FormNote_close__1P9pw\",\"title\":\"FormNote_title__3Ul3h\",\"imageAddWrapper\":\"FormNote_imageAddWrapper__W13Ab\",\"addImage\":\"FormNote_addImage__gpadC\",\"form\":\"FormNote_form__1_jCH\",\"radio\":\"FormNote_radio__18ow-\",\"radioTitle\":\"FormNote_radioTitle__13t31\",\"radioList\":\"FormNote_radioList__23P1R\",\"radioButton\":\"FormNote_radioButton__3eEKd\",\"textNoteWrapper\":\"FormNote_textNoteWrapper__1U8H8\",\"textNoteTitle\":\"FormNote_textNoteTitle__2mcCE\",\"textNote\":\"FormNote_textNote__3fmSm\",\"submitWrapper\":\"FormNote_submitWrapper__2uXeb\",\"submit\":\"FormNote_submit__1_64i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__1qUDY\",\"content\":\"Header_content__1ykg4\",\"title\":\"Header_title__3su7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3_GhA\",\"content\":\"App_content__JuP0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ListNotes_wrapper__1Nbkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Note_wrapper__3C25J\",\"content\":\"Note_content__2Zs0l\",\"head\":\"Note_head__JNAdq\",\"body\":\"Note_body__1JB1A\",\"image\":\"Note_image__1vWGk\",\"footer\":\"Note_footer__2lbEs\",\"dateUpdated\":\"Note_dateUpdated__ZaQHr\",\"actions\":\"Note_actions__3j67T\",\"completed\":\"Note_completed__1X6qE\",\"delete\":\"Note_delete__2paxp\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:3001\",\r\n});\r\n\r\n\r\nexport const notesAPI = {\r\n    getAllNotes() {\r\n        return instance.get('/notes/all');\r\n    },\r\n    addNewNote(text, importance) {\r\n        return instance.post('/notes/add', {\r\n            text, importance\r\n        });\r\n    },\r\n    updateNoteById({ id, text, importance }) {\r\n        return instance.post(`/notes/update/${id}`, {\r\n            text, importance\r\n        });\r\n    },\r\n    deleteNote(id) {\r\n        return instance.get(`/notes/delete/${id}`);\r\n    },\r\n    changeCompleted(id, completed) {\r\n        return instance.post(`/notes/completed/${id}`, {\r\n            completed\r\n        })\r\n    },\r\n    updateImage(id, image) {\r\n        const data = new FormData();\r\n        data.append('image', image, image.name);\r\n        return instance.post(`/notes/image/update/${id}`, data);\r\n    }\r\n};","import { notesAPI } from '../api/api';\r\n\r\nconst SET_ALL_NOTES = 'GET_ALL_NOTES';\r\nconst SET_NEW_NOTE = 'ADD_NEW_NOTE';\r\nconst SET_UPDATE_NOTE = 'UPDATE_NOTE';\r\nconst DELETE_NOTE = 'DELETE_NOTE';\r\nconst CHANGE_COMPLETED = 'CHANGE_COMPLETED';\r\nconst SET_IMAGE = 'SET_IMAGE';\r\n\r\nlet initialState = {\r\n    notes: [],\r\n};\r\n\r\nconst notesReducer = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch(action.type) {\r\n        case SET_ALL_NOTES: {\r\n            return {\r\n                ...state,\r\n                notes: action.notes,\r\n            }\r\n        }\r\n        case SET_NEW_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: [action.note, ...state.notes],\r\n            }\r\n        }\r\n        case SET_UPDATE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => {\r\n                    if (note.id === action.id) {\r\n                        return {\r\n                            ...note,\r\n                            text: action.text,\r\n                            importance: action.importance\r\n                        };\r\n                    }\r\n                    return note;\r\n                }),\r\n            }\r\n        }\r\n        case DELETE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.id),\r\n            }\r\n        }\r\n        case CHANGE_COMPLETED: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => {\r\n                    if (note.id === action.id) {\r\n                        return {\r\n                            ...note,\r\n                            completed: action.completed,\r\n                        };\r\n                    }\r\n                    return note;\r\n                }),\r\n            }\r\n        }\r\n        case SET_IMAGE: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => {\r\n                    if (note.id === action.id) {\r\n                        return {\r\n                            ...note,\r\n                            image: action.image,\r\n                        }\r\n                    }\r\n                    return note;\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAllNotes = (notes) => ({\r\n    type: SET_ALL_NOTES,\r\n    notes\r\n});\r\n\r\nexport const setNewNote = (note) => ({\r\n    type: SET_NEW_NOTE,\r\n    note\r\n});\r\n\r\nexport const setUpdateNote = ({ id, text, importance }) => ({\r\n    type: SET_UPDATE_NOTE,\r\n    id, text, importance\r\n});\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: DELETE_NOTE,\r\n    id\r\n});\r\n\r\nexport const setChangeCompleted = (id, completed) => ({\r\n    type: CHANGE_COMPLETED,\r\n    id, completed\r\n});\r\n\r\nexport const setImage = (id, image) => ({\r\n    type: SET_IMAGE,\r\n    id, image\r\n});\r\n\r\n// Получить все записи.\r\nexport const getAllNotes = () => async (dispatch) => {\r\n    const response = await notesAPI.getAllNotes();\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && Array.isArray(data)) {\r\n        dispatch(setAllNotes(data));\r\n    }\r\n};\r\n\r\n// Добавить новую запись.\r\nexport const addNewNote = ({ text, importance }) => async (dispatch) => {\r\n    const response = await notesAPI.addNewNote(text, importance);\r\n    console.log(response);\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && data) {\r\n        dispatch(setNewNote(data));\r\n    }\r\n};\r\n\r\n// Обновить запись.\r\nexport const updateNote = ({ id, text, importance }) => async (dispatch) => {\r\n    const response = await notesAPI.updateNoteById({ id, text, importance });\r\n    console.log(response);\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && data) {\r\n        dispatch(setUpdateNote({ id, text, importance }));\r\n    }\r\n};\r\n\r\n// Удалить запись\r\nexport const deleteNoteById = ({ id }) => async (dispatch) => {\r\n    const response = await notesAPI.deleteNote(id);\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && data) {\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\n// Отметка, что заметка выполнена / не выполнена.\r\nexport const changeCompleted = ({ id, completed }) => async (dispatch) => {\r\n    const response = await notesAPI.changeCompleted(id, completed);\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && data) {\r\n        dispatch(setChangeCompleted(id, completed));\r\n    }\r\n}\r\n\r\n// Установить или обновить изображение\r\nexport const updateImage = ({ id, image }) => async (dispatch) => {\r\n    const response = await notesAPI.updateImage(id, image);\r\n    const dataResponse = response.data;\r\n    const { result, data } = dataResponse;\r\n    if (result === 'ok' && data) {\r\n        console.log(data);\r\n        dispatch(setImage(id, data));\r\n    }\r\n}\r\n\r\n\r\nexport default notesReducer;","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport notesReducer from './notesReducer';\r\n\r\nlet reducers = combineReducers({\r\n    notes: notesReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store; ","import styles from \"./Header.module.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.wrapper}>\r\n            <div className=\"container\">\r\n                <div className={styles.content}>\r\n                    <h1 className={styles.title}>\r\n                        Заметки\r\n                    </h1>  \r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/image.fe0800c1.svg\";","import { useState } from 'react';\r\nimport styles from './FormNote.module.scss';\r\nimport { useFormik } from 'formik';\r\nimport imageSVG from '../../assets/images/image.svg';\r\n\r\n\r\nconst FormNote = ({ open, onClose, action, update, note, setImage }) => {\r\n    const [addImage, setAddImage] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            importance: update ? note?.importance : 0,\r\n            text: update ? note?.text : ''\r\n        },\r\n        onSubmit: values => {   \r\n            console.log(values);\r\n            action({ \r\n                text: values.text, \r\n                importance: values.importance,\r\n                id: note?.id\r\n            });\r\n            onClose();\r\n        },\r\n    });\r\n\r\n    const setImageForNote = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({ \r\n                id: note.id, \r\n                image: e.target.files[0] \r\n            });\r\n        }\r\n        onClose();\r\n    }\r\n    \r\n    if (open) {\r\n        document.body.classList.add('lock');\r\n    } else {\r\n        document.body.classList.remove('lock');\r\n    }\r\n    return (\r\n        <div\r\n            className={styles.wrapper + \" \" + (open ? styles.open : \"\")}\r\n        >\r\n            <div className={styles.content}>\r\n                <div className={styles.head}>\r\n                    <div \r\n                        className={styles.close}\r\n                        onClick={onClose}\r\n                    ></div>\r\n                </div>\r\n                <h2 className={styles.title}>\r\n                    Форма заметки\r\n                </h2>\r\n                <form \r\n                    className={styles.form}\r\n                    onSubmit={formik.handleSubmit}\r\n                >\r\n                    <div className={styles.radio}>\r\n                        <h3 className={styles.radioTitle}>\r\n                            Установите важность записи: &nbsp;\r\n                        </h3>\r\n                        <div className={styles.radioList}>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"0\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 0}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                0\r\n                            </label>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"1\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 1}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                1\r\n                            </label>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"2\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 2}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                2\r\n                            </label>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"3\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 3}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                3\r\n                            </label>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"4\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 4}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                4\r\n                            </label>\r\n                            <label className={styles.radioButton}>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    value=\"5\" \r\n                                    name=\"importance\"\r\n                                    checked={formik.values.importance == 5}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                                5\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.textNoteWrapper}>\r\n                        <h3 className={styles.textNoteTitle}>Введите текст заметки</h3>\r\n                        <textarea \r\n                            className={styles.textNote}\r\n                            name=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.text}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className={styles.submitWrapper}>\r\n                        <button \r\n                            type=\"submit\"\r\n                            className={styles.submit}\r\n                        >Записать</button>\r\n                    </div>\r\n                </form>\r\n                {(update && !note?.image) && <div className={styles.imageAddWrapper}>\r\n                    <div>Добавить изображение?</div>\r\n                    <label className={styles.addImage}>\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src={imageSVG}\r\n                        />\r\n                        <input \r\n                            hidden\r\n                            type=\"file\" \r\n                            onChange={setImageForNote}\r\n                        />\r\n                    </label>\r\n                </div>}\r\n                {(update && note?.image) && <div className={styles.imageAddWrapper}>\r\n                    <div>Изменить изображение</div>\r\n                    <label className={styles.addImage}>\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src={imageSVG}\r\n                        />\r\n                        <input \r\n                            hidden\r\n                            type=\"file\" \r\n                            onChange={setImageForNote}\r\n                        />\r\n                    </label>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormNote;","import { useState } from 'react';\r\nimport styles from './Note.module.scss';\r\n\r\nimport FormNote from '../FormNote/FormNote';\r\n\r\nconst Note = ({ \r\n    note, \r\n    updateNote, \r\n    changeCompleted,\r\n    deleteNote,\r\n    updateImage }) => {\r\n    const [openForm, setOpenForm] = useState(false);\r\n\r\n    const openWindow = (e) => {\r\n        setOpenForm(true);\r\n    }\r\n\r\n    const closeWindow = (e) => {\r\n        setOpenForm(false);\r\n    }\r\n\r\n    const changeCompletedNote = (e) => {\r\n        changeCompleted({ \r\n            id: note.id,\r\n            completed: !note.completed\r\n        });\r\n    }\r\n\r\n\r\n    const { text, importance, dateCreated, dateUpdated, completed } = note;\r\n    const dateCreatedSplit = dateCreated.split(' ');\r\n    const [date, time] = dateCreatedSplit;\r\n    const [hours, minutes] = time.split(':');\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div \r\n                className={styles.content}\r\n                onClick={!openForm ? openWindow : () => {}}\r\n            >\r\n                <div className={styles.head}>\r\n                    <div className={styles.date}>\r\n                        {date}\r\n                    </div>\r\n                    <div className={styles.importance}>\r\n                        Важность: &nbsp; \r\n                        <span>{importance}</span>\r\n                    </div>\r\n                    <div className={styles.time}>\r\n                        {`${hours}:${minutes}`}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.body}>\r\n                    <div className={styles.text}>\r\n                        <p>\r\n                            {text}\r\n                        </p>\r\n                    </div>\r\n                    {note.image && <div className={styles.image}>\r\n                        <img \r\n                            alt={note.image}\r\n                            src={note.image}\r\n                        />\r\n                    </div>}\r\n                </div>\r\n                <div className={styles.footer}>\r\n                    Последние изменения в &nbsp;\r\n                    {dateUpdated && <div className={styles.dateUpdated}>{dateUpdated}</div>}\r\n                </div>\r\n            </div>\r\n            <div className={styles.actions}>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    className={styles.completed}\r\n                    checked={completed}\r\n                    onChange={changeCompletedNote}\r\n                />\r\n                <button \r\n                    className={styles.delete}\r\n                    onClick={() => deleteNote({ id: note.id })}\r\n                >\r\n                    X\r\n                </button>\r\n            </div>\r\n            <FormNote \r\n                open={openForm}\r\n                onClose={closeWindow}\r\n                update\r\n                note={note}\r\n                action={updateNote}\r\n                setImage={updateImage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import styles from './ListNotes.module.scss';\r\n\r\nimport Note from '../Note/Note';\r\n\r\n\r\nconst ListNotes = ({ \r\n    notes, \r\n    updateNote,\r\n    changeCompleted, \r\n    deleteNote,\r\n    updateImage }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {notes && notes.map(note => <Note \r\n                key={note.id} \r\n                note={note} \r\n                updateNote={updateNote}\r\n                changeCompleted={changeCompleted}\r\n                deleteNote={deleteNote}\r\n                updateImage={updateImage}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListNotes;","import styles from './Notes.module.scss';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n    getAllNotes, \r\n    addNewNote, \r\n    updateNote, \r\n    changeCompleted,\r\n    deleteNoteById,\r\n    updateImage\r\n} from '../../redux/notesReducer';\r\n\r\nimport ListNotes from '../../components/ListNotes/ListNotes';\r\nimport FormNote from '../../components/FormNote/FormNote';\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openCreateNoteWindow: false,\r\n        }\r\n\r\n        this.openWindow = this.openWindow.bind(this);\r\n        this.closeWindow = this.closeWindow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllNotes();\r\n    }\r\n\r\n    openWindow() {\r\n        this.setState({ openCreateNoteWindow: true });\r\n    }\r\n\r\n    closeWindow() {\r\n        this.setState({ openCreateNoteWindow: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={\"container \" + styles.notesContainer}>\r\n                    <div className={styles.content}>\r\n                        <div className={styles.head}>\r\n                            <button \r\n                                type=\"button\" \r\n                                className={styles.buttonAddNote}\r\n                                onClick={this.openWindow}\r\n                            >+</button>\r\n                        </div>\r\n                        <div className={styles.list}>\r\n                            <ListNotes \r\n                                notes={this.props.notes}\r\n                                updateNote={this.props.updateNote}\r\n                                changeCompleted={this.props.changeCompleted}\r\n                                deleteNote={this.props.deleteNote}\r\n                                updateImage={this.props.updateImage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FormNote \r\n                    open={this.state.openCreateNoteWindow}\r\n                    onClose={this.closeWindow}\r\n                    action={this.props.addNewNote}\r\n                    setImage={this.props.updateImage}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notes: state.notes.notes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllNotes,\r\n    addNewNote,\r\n    updateNote,\r\n    changeCompleted,\r\n    deleteNote: deleteNoteById,\r\n    updateImage\r\n})(Notes);","import { Component } from 'react';\nimport styles from './App.module.scss';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport Header from './components/Header/Header';\nimport Notes from './pages/Notes/Notes';\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className={styles.wrapper}>\n          <Header />\n          <main className={styles.content}>\n            <Notes />\n          </main>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}